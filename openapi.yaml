openapi: 3.1.0
info:
  title: Bitwavie Orchestrator
  version: 1.1.0
  description: API for the Bitwavie Orchestrator, providing endpoints for cryptocurrency transaction processing and pricing
servers:
  - url: https://bitwavie-orchestrator-455488113475.us-central1.run.app
    description: Production server

paths:
  /:
    get:
      operationId: getRoot
      summary: Welcome endpoint
      responses:
        '200':
          description: Welcome message
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Welcome to Bitwave Financial Orchestrator API"

  /health:
    get:
      operationId: getHealth
      summary: Health check endpoint
      responses:
        '200':
          description: Health status
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "healthy"

  /price/health:
    get:
      operationId: getPriceHealth
      summary: Pricing service health check
      responses:
        '200':
          description: Pricing service health status
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "healthy"

  /price:
    get:
      operationId: getCryptoPrice
      summary: Get cryptocurrency price
      parameters:
        - name: fromSym
          in: query
          required: true
          description: Cryptocurrency symbol (e.g., 'BTC', 'ETH')
          schema:
            type: string
            example: "BTC"
        - name: timestampSEC
          in: query
          required: true
          description: Unix timestamp in seconds
          schema:
            type: integer
            example: 1714675200
        - name: toFiat
          in: query
          required: false
          description: Target fiat currency
          schema:
            type: string
            default: "USD"
            example: "USD"
        - name: service
          in: query
          required: false
          description: Pricing data source
          schema:
            type: string
            default: "coinbase"
            example: "coinbase"
        - name: resolution
          in: query
          required: false
          description: Time resolution for price data
          schema:
            type: string
            default: "1d"
            enum: ["1d", "1h"]
            example: "1d"
        - name: timezone
          in: query
          required: false
          description: Timezone for timestamp interpretation
          schema:
            type: string
            default: "UTC"
            example: "UTC"
      responses:
        '200':
          description: Cryptocurrency price
          content:
            application/json:
              schema:
                type: object
                properties:
                  price:
                    type: object
                    properties:
                      mathjs:
                        type: string
                        example: "BigNumber"
                      value:
                        type: string
                        example: "64255.78"
                  type:
                    type: string
                    example: "candlestick"
                  high:
                    type: object
                    properties:
                      mathjs:
                        type: string
                        example: "BigNumber"
                      value:
                        type: string
                        example: "65000.00"
                  low:
                    type: object
                    properties:
                      mathjs:
                        type: string
                        example: "BigNumber"
                      value:
                        type: string
                        example: "63500.00"
                  open:
                    type: object
                    properties:
                      mathjs:
                        type: string
                        example: "BigNumber"
                      value:
                        type: string
                        example: "63800.00"
                  close:
                    type: object
                    properties:
                      mathjs:
                        type: string
                        example: "BigNumber"
                      value:
                        type: string
                        example: "64255.78"
                  volume:
                    type: object
                    properties:
                      mathjs:
                        type: string
                        example: "BigNumber"
                      value:
                        type: string
                        example: "2611.3560546"
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "error"
                  message:
                    type: string
                    example: "Missing required parameter: fromSym"

  /fifo/universal:
    post:
      operationId: runUniversalFifo
      summary: Process FIFO for combined wallet inventory
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                transactions:
                  type: array
                  items:
                    type: object
                    properties:
                      dateTime:
                        type: string
                        format: date-time
                        example: "2025-01-01T12:00:00"
                      operation:
                        type: string
                        enum: ["DEPOSIT", "WITHDRAW", "FEE"]
                        example: "DEPOSIT"
                      type:
                        type: string
                        example: "purchase"
                      assetTicker:
                        type: string
                        example: "BTC"
                      assetAmount:
                        type: number
                        format: double
                        example: 1.0
                      assetvalueInBaseCurrency:
                        type: number
                        format: double
                        example: 50000
                      feeAmount:
                        type: number
                        format: double
                        nullable: true
                        example: 0.001
                      feeAsset:
                        type: string
                        nullable: true
                        example: "BTC"
                    required:
                      - dateTime
                      - operation
                      - assetTicker
                      - assetAmount
              required:
                - transactions
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
                  description: CSV file with transaction data
      responses:
        '200':
          description: Universal FIFO results
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    endingBalance:
                      type: number
                      format: double
                      example: 0.5
                    endingCostBasisUSD:
                      type: number
                      format: double
                      example: 25000.0
                    realizedGainLossUSD:
                      type: number
                      format: double
                      example: 5000.0
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "No file part"

  /fifo/per_wallet:
    post:
      operationId: runPerWalletFifo
      summary: Process FIFO per wallet
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                transactions:
                  type: array
                  items:
                    type: object
                    properties:
                      dateTime:
                        type: string
                        format: date-time
                        example: "2025-01-01T12:00:00"
                      walletId:
                        type: string
                        example: "wallet1"
                      transactionId:
                        type: string
                        example: "tx1"
                      operation:
                        type: string
                        enum: ["DEPOSIT", "WITHDRAW", "FEE"]
                        example: "DEPOSIT"
                      type:
                        type: string
                        example: "purchase"
                      assetTicker:
                        type: string
                        example: "BTC"
                      assetAmount:
                        type: number
                        format: double
                        example: 1.0
                      assetvalueInBaseCurrency:
                        type: number
                        format: double
                        example: 50000
                      feeAmount:
                        type: number
                        format: double
                        nullable: true
                        example: 0.001
                      feeAsset:
                        type: string
                        nullable: true
                        example: "BTC"
                    required:
                      - dateTime
                      - walletId
                      - operation
                      - assetTicker
                      - assetAmount
              required:
                - transactions
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
                  description: CSV file with transaction data
      responses:
        '200':
          description: Per-wallet FIFO results
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    walletId:
                      type: string
                      example: "wallet1"
                    assetTicker:
                      type: string
                      example: "BTC"
                    endingBalance:
                      type: number
                      format: double
                      example: 0.5
                    endingCostBasisUSD:
                      type: number
                      format: double
                      example: 25000.0
                    realizedGainLossUSD:
                      type: number
                      format: double
                      example: 5000.0
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "No file part"

components:
  schemas:
    BigNumber:
      type: object
      properties:
        mathjs:
          type: string
          example: "BigNumber"
        value:
          type: string
          example: "64255.78"
    PriceResponse:
      type: object
      properties:
        price:
          $ref: '#/components/schemas/BigNumber'
        type:
          type: string
          example: "candlestick"
        high:
          $ref: '#/components/schemas/BigNumber'
        low:
          $ref: '#/components/schemas/BigNumber'
        open:
          $ref: '#/components/schemas/BigNumber'
        close:
          $ref: '#/components/schemas/BigNumber'
        volume:
          $ref: '#/components/schemas/BigNumber'
    UniversalFifoResult:
      type: object
      properties:
        endingBalance:
          type: number
          format: double
          example: 0.5
        endingCostBasisUSD:
          type: number
          format: double
          example: 25000.0
        realizedGainLossUSD:
          type: number
          format: double
          example: 5000.0
    PerWalletFifoResult:
      type: object
      properties:
        walletId:
          type: string
          example: "wallet1"
        assetTicker:
          type: string
          example: "BTC"
        endingBalance:
          type: number
          format: double
          example: 0.5
        endingCostBasisUSD:
          type: number
          format: double
          example: 25000.0
        realizedGainLossUSD:
          type: number
          format: double
          example: 5000.0
